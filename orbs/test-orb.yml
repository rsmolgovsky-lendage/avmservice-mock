version: 2.1
description: A foo orb

commands:
  hello:
    description: Greet the user politely
    parameters:
      username:
        type: string
        description: A name of the user to greet
    steps:
      - run: "echo Hello << parameters.username >>"
examples:
  simple_greeting:
    description: Greeting a user named Anna
    usage:
      version: 2.1
      orbs:
        foo: bar/foo@1.2.3
      jobs:
        build:
          machine: true
          steps:
            - foo/hello:
                username: "Anna"
    result:
      version: 2.1
      jobs:
        build:
          machine: true
          steps:
            - run:
                command: echo Hello Anna
      workflows:
        version: 2
        workflow:
          jobs:
            - build
  gck-management:
    jobs:
      publish-and-rollout-image:
        description: "Update cluster with new Docker image."
        machine: true
        parameters:
          cluster:
            description: "The Kubernetes cluster name."
            type: string
          deployment:
            description: "The Kubernetes deployment name."
            type: string
          container:
            description: "The Kubernetes container name."
            type: string
          gcloud-service-key:
            description: The gcloud service key
            type: env_var_name
            default: GCLOUD_SERVICE_KEY
          google-project-id:
            description: The Google project ID to connect with via the gcloud CLI
            type: env_var_name
            default: GOOGLE_PROJECT_ID
          google-compute-zone:
            description: The Google compute zone to connect with via the gcloud CLI
            type: env_var_name
            default: GOOGLE_COMPUTE_ZONE
          registry-url:
            description: The GCR registry URL from ['', us, eu, asia].gcr.io
            type: string
            default: gcr.io
          image:
            description: A name for your docker image
            type: string
          tag:
            description: A docker image tag
            type: string
            default: "latest"
          path-to-dockerfile:
            description: The relative path to the Dockerfile to use when building image
            type: string
            default: "."
        steps:
          - checkout
          - gcr/gcr-auth:
              google-project-id: <<parameters.google-project-id>>
              google-compute-zone: <<parameters.google-compute-zone>>
          - install
          - gcr/build-image:
              registry-url: <<parameters.registry-url>>
              google-project-id: <<parameters.google-project-id>>
              image: <<parameters.image>>
              tag: << parameters.tag >>
              path-to-dockerfile: <<parameters.path-to-dockerfile>>
          - gcr/push-image:
              registry-url: <<parameters.registry-url>>
              google-project-id: <<parameters.google-project-id>>
              image: <<parameters.image>>
              tag: <<parameters.tag>>
          - rollout-image:
              cluster: "<<parameters.cluster>>"
              deployment: "<<parameters.deployment>>"
              container: "<<parameters.container>>"
              image: "<<parameters.image>>"
      publish-and-update-image:
        description: "Update cluster with new Docker image."
        machine: true
        parameters:
          cluster:
            description: "The Kubernetes cluster name."
            type: string
          gcloud-service-key:
            description: The gcloud service key
            type: env_var_name
            default: GCLOUD_SERVICE_KEY
          google-project-id:
            description: The Google project ID to connect with via the gcloud CLI
            type: env_var_name
            default: GOOGLE_PROJECT_ID
          google-compute-zone:
            description: The Google compute zone to connect with via the gcloud CLI
            type: env_var_name
            default: GOOGLE_COMPUTE_ZONE
          registry-url:
            description: The GCR registry URL from ['', us, eu, asia].gcr.io
            type: string
            default: gcr.io
          image-name:
            description: A name for your docker image
            type: env_var_name
            default: CIRCLE_PROJECT_REPONAME
          tag:
            description: A docker image tag
            type: string
            default: "latest"
          path-to-dockerfile:
            description: The relative path to the Dockerfile to use when building image
            type: string
            default: "."
          deployment-descriptor:
            description: A path to a deployment descriptor
            type: string
            default: "kubernetes-manifests/k8s.yml"
        steps:
          - setup:
              - environment:
                REG_URL: <<parameters.registry-url>>
                IMAGE_NAME: <<parameters.image-name>>
                TAG: <<parameters.tag>>
                G_PROJECT_ID: <<parameters.google-project-id>>
          - checkout
          - gcr/gcr-auth:
              google-project-id: <<parameters.google-project-id>>
              google-compute-zone: <<parameters.google-compute-zone>>
          - install
          - gcr/build-image:
              registry-url: <<parameters.registry-url>>
              google-project-id: <<parameters.google-project-id>>
              image: <<parameters.image-name>>
              tag: << parameters.tag >>
              path-to-dockerfile: <<parameters.path-to-dockerfile>>
          - gcr/push-image:
              registry-url: <<parameters.registry-url>>
              google-project-id: <<parameters.google-project-id>>
              image: <<parameters.image-name>>
              tag: <<parameters.tag>>
          - publish-and-update:
              cluster: "<<parameters.cluster>>"
    commands:
      install:
        description: "Install `gcloud` and `kubectl` if not already installed."
        steps:
          - gcloud/install
          - k8s/install
      init:
        description: "Initialize the `gcloud` CLI."
        steps:
          - gcloud/initialize
      rollout-image:
        description: "Update a deployment's Docker image."
        parameters:
          cluster:
            description: "The Kubernetes cluster name."
            type: string
          deployment:
            description: "The Kubernetes deployment name."
            type: string
          container:
            description: "The Kubernetes container name."
            type: string
          image:
            description: A name for your docker image
            type: string
        steps:
          - run: |
              gcloud container clusters get-credentials <<parameters.cluster>>
              kubectl set image deployment <<parameters.deployment>> <<parameters.container>>=<<parameters.image>>
      publish-and-update:
        description: "Publish and update a deployment's Docker image."
        parameters:
          cluster:
            description: "The Kubernetes cluster name."
            type: string
          deployment-descriptor:
            description: A path to a deployment descriptor
            type: string
        steps:
          - run: apt-get install -qq -y gettext
          - run: |
              gcloud container clusters get-credentials <<parameters.cluster>>
              envsubst < <<parameters.deployment-descriptor>> > ${HOME}/patched_k8s.yml
              kubectl apply -f ${HOME}/patched_k8s.yml
              kubectl rollout status deployment ${CIRCLE_PROJECT_REPONAME}


