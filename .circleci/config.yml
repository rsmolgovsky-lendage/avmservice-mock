# Java Maven CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2.1

orbs:
  gck-management:
    orbs:
      gcloud: circleci/gcp-cli@1.0.6
      gcr: circleci/gcp-gcr@0.0.2
      k8s: circleci/kubernetes@0.1.0
    commands:
      install:
        description: "Install `gcloud` and `kubectl` if not already installed."
        steps:
          - gcloud/install
          - k8s/install
          - run: sudo apt-get install -qq -y gettext
      init:
        description: "Initialize the `gcloud` CLI."
        steps:
          - gcloud/initialize
      rollout-image:
        description: "Update a deployment's Docker image."
        parameters:
          cluster:
            description: "The Kubernetes cluster name."
            type: string
          deployment:
            description: "The Kubernetes deployment name."
            type: string
          container:
            description: "The Kubernetes container name."
            type: string
          image:
            description: A name for your docker image
            type: string
        steps:
          - run: |
              gcloud container clusters get-credentials <<parameters.cluster>>
              kubectl set image deployment <<parameters.deployment>> <<parameters.container>>=<<parameters.image>>
      publish-and-update:
        description: "Publish and update a deployment's Docker image."
        parameters:
          cluster:
            description: "The Kubernetes cluster name."
            type: string
          deployment-descriptor:
            description: A path to a deployment descriptor
            type: string
          google-project-id:
            description: The Google project ID to connect with via the gcloud CLI
            type: string
          registry-url:
              description: The GCR registry URL from ['', us, eu, asia].gcr.io
              type: string
          image:
              description: A name for your docker image
              type: string
          tag:
              description: A docker image tag
              type: string
        steps:
          - run: export REG_URL=<< parameters.registry-url >>
          - run: export IMAGE_NAME=${<< parameters.image >>}
          - run: export TAG=<< parameters.tag >>
          - run: export G_PROJECT_ID=${<< parameters.google-project-id >>}
          - run: echo Values - ${REG_URL}, ${IMAGE_NAME}, ${TAG}, ${G_PROJECT_ID}
          - run: gcloud container clusters get-credentials <<parameters.cluster>>
          - run: envsubst < <<parameters.deployment-descriptor>> > ${HOME}/patched_k8s.yml
          - run: cat  ${HOME}/patched_k8s.yml
          - run: kubectl apply -f ${HOME}/patched_k8s.yml
          - run: kubectl rollout status deployment ${CIRCLE_PROJECT_REPONAME}
    jobs:
      publish-and-update-image:
        description: "Update cluster with new Docker image."
        machine: true
#        environment:
#          REG_URL: << parameters.registry-url >>
#          IMAGE_NAME: ${<< parameters.image-name >>}
#          TAG: << parameters.tag >>
#          G_PROJECT_ID: ${<< parameters.google-project-id >>}
        parameters:
          cluster:
            description: "The Kubernetes cluster name."
            type: string
          gcloud-service-key:
            description: The gcloud service key
            type: env_var_name
            default: GCLOUD_SERVICE_KEY
          google-project-id:
            description: The Google project ID to connect with via the gcloud CLI
            type: env_var_name
            default: GOOGLE_PROJECT_ID
          google-compute-zone:
            description: The Google compute zone to connect with via the gcloud CLI
            type: env_var_name
            default: GOOGLE_COMPUTE_ZONE
          registry-url:
            description: The GCR registry URL from ['', us, eu, asia].gcr.io
            type: string
            default: us.gcr.io
          image-name:
            description: A name for your docker image
            type: env_var_name
            default: CIRCLE_PROJECT_REPONAME
          tag:
            description: A docker image tag
            type: string
            default: "latest"
          path-to-dockerfile:
            description: The relative path to the Dockerfile to use when building image
            type: string
            default: "."
          deployment-descriptor:
            description: A path to a deployment descriptor
            type: string
            default: "kubernetes-manifests/k8s.yml"
        steps:
          - checkout
          - gcr/gcr-auth:
              google-project-id: <<parameters.google-project-id>>
              google-compute-zone: <<parameters.google-compute-zone>>
          - install
          - gcr/build-image:
              registry-url: <<parameters.registry-url>>
              google-project-id: <<parameters.google-project-id>>
              image: ${<<parameters.image-name>>}
              tag: <<parameters.tag>>
              path-to-dockerfile: <<parameters.path-to-dockerfile>>
          - gcr/push-image:
              registry-url: <<parameters.registry-url>>
              google-project-id: <<parameters.google-project-id>>
              image: ${<<parameters.image-name>>}
              tag: <<parameters.tag>>
          - publish-and-update:
              cluster: "<<parameters.cluster>>"
              deployment-descriptor: "<<parameters.deployment-descriptor>>"
              registry-url: <<parameters.registry-url>>
              google-project-id: <<parameters.google-project-id>>
              image: ${<<parameters.image-name>>}
              tag: <<parameters.tag>>
workflows:
  version: 2.1
  deploy-service:
    jobs:
      - gck-management/publish-and-update-image:
          cluster: deployment-cluster-dev





